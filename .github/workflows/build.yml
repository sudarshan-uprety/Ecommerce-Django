name: build_main

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code for deployment
      uses: actions/checkout@v3
      
    - name: Create .env file
      run: |
        echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
        echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
        echo "DB_USER=${{ secrets.DB_USER }}" >> .env
        echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env
        echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> .env
        echo "KHALTI_PUBLIC_KEY=${{ secrets.KHALTI_PUBLIC_KEY }}" >> .env
        echo "KHALTI_SECRET_KEY=${{ secrets.KHALTI_SECRET_KEY }}" >> .env
      
    - name: deploy using ssh
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        source: .
        target: /home/azureuser/sudarshan/Ecommerce-Django
        strip_components: 1

    - name: Run additional commands on the server
      run: |
        ssh -i ${{ secrets.SSH_PRIVATE_KEY }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -p ${{ secrets.PORT }} 'cd /home/azureuser/sudarshan/Ecommerce-Django && sudo docker-compose up --build -d'
